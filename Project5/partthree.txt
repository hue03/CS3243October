// CS3243 Operating Systems
// Fall 2013
// Project 5: Swapping and Paging, Part 3
// Steven Ng and Hue Moua
// Date: 11/22/2013
// File: partthree.txt

1. What are the maximum, minimum, and average amount of external fragmentation over time in Part One for each of the three memory allocation methods (first-­fit, best-­fit, and worst-­fit). Show data to support your decisions.

For part 1 of the project, we are using the suggested settings given in the project description, but compaction is turned off, to answer these questions.
The average is computed by adding all the block/process ratios during the time interval 0 - MAX_QUANTA(50000) then divide the sum by the MAX_QUANTA(50000).
The max and min were determined by looking at the block/process ratio in the first 5000 time quanta and not taking into account the first starting quantas because process are just starting to get loaded into memory.
First Fit: Max - BLOCK/PROC RATIO = 1; t = 812
	   Min - BLOCK/PROC RATIO = 0.1333; t = 4257
           Avg - TOTAL 1: 20522.6 / MAX_QUANTA = 0.410452
           TOTAL 2: 21667.9 / MAX_QUANTA = 0.433358
           0.410452 + 0.433358 = 0.84381
           0.84381 / 2 = 0.421905
		   
Best Fit:  Max - BLOCK/PROC RATIO = 1; t = 972 & t = 4188
           Min - BLOCK/PROC RATIO = 0.0952381; t = 3721
           Avg - TOTAL 1: 21125.5 / MAX_QUANTA = 0.42251
           TOTAL 2: 21002.3 / MAX_QUANTA = 0.420046
           0.42251 + 0.420046 = 0.842556
           0.842556 / 2 = 0.421278
		   
Worst Fit: Max - BLOCK/PROC RATIO = 1; t = 282 & t = 1659
           Min - BLOCK/PROC RATIO = 0.08333; t = 512
           Avg - TOTAL 1: 20563.4 / MAX_QUANTA = 0.411268
           TOTAL 2: 20511.7 / MAX_QUANTA = 0.410234
           0.411268 + 0.410234 = 0.821502
           0.821502 / 2 = 0.410751

From all of this, the percentage of external fragmentation is about even amongst all 3 algorithms but Worst Fit is a bit better than the other two in not producing a lot of external fragmentation.
		   
2.When memory compactio  is enabled, how often does compaction occur with an activation threshold of 0.35, 0.5, and 0.75 for each of the three memory allocation methods?

Again using the given settings but adjusting the threshold for compaction:
35%: First Fit      Best Fit     Worst Fit
       985            1141	    1124
       1081           986           1223
       1118           1180          1204
     -------------------------------------
      1061.33        1102.33       1183.67
      
50%: First Fit      Best Fit      Worst Fit
       464            494            612
       370            483            484
       546            672            474
     -------------------------------------
       460           549.67        523.33

75%: First Fit      Best Fit      Worst Fit
        84            128            83
        109           120            68
        71            138            78
     ------------------------------------
        88           128.67         76.33

When the threshold is at 35%, First Fit results in the least amount of times compaction is ran. For 50%, First Fit is also results in the least amount of times compaction occurs. When the threshold is at 75%, Worst Fit results in the least amount of compaction occurances.

3. Of the three paging algorithms in Part Two – FIFO, LRU, and Second Chance – which one results in the lowest number of page faults in your simulation?
   What are the average page fault rates for each of the three?
   
   Given a random seed (1385127952) and setting the number of processes to 23, the number of page faults for each page-replacement algorithm are as follows:
   
   Page-Replacement Algorithm | # of Page Faults
   ---------------------------+------------------
   FIFO                       | 11608
   LRU                        | 11512
   Second Chance              | 11418
   
   For this particular instance, Second Chance runs with the lowest number of page faults, followed by LRU, and then FIFO.
   
   This, of course, only pertains to a particular case.
   For the same number of processes, and 100 runs, the average number of page faults are as follows:
   
   Page-Replacement Algorithm | Avg # of Page Faults for 100 runs
   ---------------------------+-----------------------------------
   FIFO                       | 12525.34
   LRU                        | 12216.04
   Second Chance              | 12385.12
   
   On average over 100 runs, LRU runs with the lowest number of page faults,, followed by Second Chance, and then FIFO.
   
4. If you increase the number of processes to the maximum allowed in Part Two – what do the page fault rates then become?
   
   Unfortunately, this causes the backing store to be completely filled.
   As a result, we reduced the maximum death interval by half so that processes would be killed off quicker and wouldn't fill up the backing store.
   Using the same random seed from question 3 (1385127952), setting the number of processes to 23, and the maximum death interval to 75, the number of page faults for each page-replacement algorithm are as follows:
   
   Page-Replacement Algorithm | # of Page Faults
   ---------------------------+------------------
   FIFO                       | 181210
   LRU                        | 222420
   Second Chance              | 196332
   
   For this particular instance, FIFO actually runs with the lowest number of page faults, followed by Second Chance, and then LRU.
   
   We also did this for 100 runs, and the average number of page faults are as follows:
   
   Page-Replacement Algorithm | Avg # of Page Faults for 100 runs
   ---------------------------+-----------------------------------
   FIFO                       | 184624.48
   LRU                        | 224486.28
   Second Chance              | 199080.48
   
   On average over 100 runs, the order of lowest number of page faults is preserved (that is, FIFO, then Second Chance, then LRU).
